{"version":3,"file":"rjsf-tailwind.cjs.production.min.js","sources":["../src/AddButton/AddButton.tsx","../src/ArrayFieldTemplate/ArrayFieldTemplate.tsx","../src/ArrayFieldItemTemplate/ArrayFieldItemTemplate.tsx","../src/BaseInputTemplate/BaseInputTemplate.tsx","../src/DescriptionField/DescriptionField.tsx","../src/FieldErrorTemplate/FieldErrorTemplate.tsx","../src/FieldTemplate/FieldTemplate.tsx","../src/IconButton/IconButton.tsx","../src/ObjectFieldTemplate/ObjectFieldTemplate.tsx","../src/SubmitButton/SubmitButton.tsx","../src/TitleField/TitleField.tsx","../src/WrapIfAdditionalTemplate/WrapIfAdditionalTemplate.tsx","../src/Templates/Templates.ts","../src/FileWidget/FileWidget.tsx","../src/SelectWidget/SelectWidget.tsx","../src/TextareaWidget/TextareaWidget.tsx","../src/Widgets/Widgets.ts","../src/Theme/Theme.tsx","../src/Form/Form.tsx"],"sourcesContent":["import React from \"react\";\nimport { PlusIcon } from '@heroicons/react/20/solid';\nimport {\n  FormContextType,\n  IconButtonProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nexport default function AddButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ uiSchema, registry, ...props }: IconButtonProps<T, S, F>) {\n  return (\n    <button\n      {...props}\n      className={`flex items-center w-full px-3 py-[9px] rounded text-sm text-left text-slate-700 font-medium border border-dashed border-slate-300 hover:border-slate-400 ${props.className}`}\n      title=\"Add Item\"\n    >\n      <PlusIcon className=\"w-[18px] h-[18px] mr-2\" />\n      Add Item\n    </button>\n  );\n}\n","import React from \"react\";\nimport {\n  getTemplate,\n  getUiOptions,\n  ArrayFieldTemplateProps,\n  ArrayFieldTemplateItemType,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\n\n/** The `ArrayFieldTemplate` component is the template used to render all items in an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTemplateProps<T, S, F>) {\n  const {\n    canAdd,\n    className,\n    disabled,\n    idSchema,\n    uiSchema,\n    items,\n    onAddClick,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n  } = props;\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\n  const ArrayFieldDescriptionTemplate = getTemplate<\n    \"ArrayFieldDescriptionTemplate\",\n    T,\n    S,\n    F\n  >(\"ArrayFieldDescriptionTemplate\", registry, uiOptions);\n  const ArrayFieldItemTemplate = getTemplate<\"ArrayFieldItemTemplate\", T, S, F>(\n    \"ArrayFieldItemTemplate\",\n    registry,\n    uiOptions\n  );\n  const ArrayFieldTitleTemplate = getTemplate<\n    \"ArrayFieldTitleTemplate\",\n    T,\n    S,\n    F\n  >(\"ArrayFieldTitleTemplate\", registry, uiOptions);\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <fieldset className={className} id={idSchema.$id}>\n        <ArrayFieldTitleTemplate\n          idSchema={idSchema}\n          title={uiOptions.title || title}\n          required={required}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n        <ArrayFieldDescriptionTemplate\n          idSchema={idSchema}\n          description={uiOptions.description || schema.description}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n        <div className=\"row array-item-list\">\n          {items &&\n            items.map(\n              ({ key, ...itemProps }: ArrayFieldTemplateItemType<T, S, F>) => (\n                <ArrayFieldItemTemplate key={key} {...itemProps} />\n              )\n            )}\n        </div>\n        {canAdd && (\n          <AddButton\n            className=\"array-item-add\"\n            onClick={onAddClick}\n            disabled={disabled || readonly}\n            uiSchema={uiSchema}\n            registry={registry}\n          />\n        )}\n      </fieldset>\n    </DndProvider>\n  );\n}\n","import React, { useState, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport { ChevronRightIcon } from '@heroicons/react/20/solid';\nimport {\n  ArrayFieldTemplateItemType,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nimport { useDrag, useDrop } from 'react-dnd';\nimport type { XYCoord } from 'dnd-core'\n\n/** The `ArrayFieldItemTemplate` component is the template used to render an items of an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldItemTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTemplateItemType<T, S, F>) {\n  const {\n    children,\n    className,\n    disabled,\n    hasToolbar,\n    hasMoveDown,\n    hasMoveUp,\n    hasRemove,\n    index,\n    onDropIndexClick,\n    onReorderClick,\n    readonly,\n    registry,\n  } = props;\n  const { RemoveButton } =\n    registry.templates.ButtonTemplates;\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const ref = useRef<HTMLInputElement>(null);\n  let draggableOptions = {};\n  if (hasMoveUp || hasMoveDown) {\n    const [, drop] = useDrop({\n      accept: 'item',\n      hover(item: any, monitor) {\n        if (!ref.current) {\n          return;\n        }\n        const dragIndex = item.index;\n        const hoverIndex = index;\n        // Don't replace items with themselves\n        if (dragIndex === hoverIndex) {\n          return;\n        }\n        // Determine rectangle on screen\n        const hoverBoundingRect = ref.current?.getBoundingClientRect();\n        // Get vertical middle\n        const hoverMiddleY =\n          (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n        // Determine mouse position\n        const clientOffset = monitor.getClientOffset();\n        // Get pixels to the top\n        const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top;\n        // Only perform the move when the mouse has crossed half of the items height\n        // When dragging downwards, only move when the cursor is below 50%\n        // When dragging upwards, only move when the cursor is above 50%\n        // Dragging downwards\n        if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n          return;\n        }\n        // Dragging upwards\n        if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n          return;\n        }\n        // Time to actually perform the action\n        // moveCard(dragIndex, hoverIndex)\n        onReorderClick(dragIndex, hoverIndex)('');\n        // console.log(\"drag index\", dragIndex)\n        // console.log(\"hover index\", hoverIndex)\n        // Note: we're mutating the monitor item here!\n        // Generally it's better to avoid mutations,\n        // but it's good here for the sake of performance\n        // to avoid expensive index searches.\n        item.index = hoverIndex;\n      },\n    });\n\n    const [{ isDragging }, drag] = useDrag({\n      type: 'item',\n      item: () => {\n        return { index };\n      },\n      collect: (monitor: any) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    });\n\n    const opacity = isDragging ? 0.3 : 1\n    drag(drop(ref))\n\n    draggableOptions = {\n      style: {opacity}\n    };\n  }\n\n  let groupTitle = \"Untitled\";\n  if (children.props.formData) {\n    if (children.props.formData.title) {\n      groupTitle = children.props.formData.title;\n    }\n  }\n\n  return (\n    <div className={`${className} mb-4`} ref={ref} {...draggableOptions}>\n      <div \n        className={classnames(\"flex items-center w-full p-3 py-2.5 rounded text-sm text-left text-slate-700 font-medium cursor-pointer\", {\n          \"bg-slate-100\": !hasToolbar,\n          \"border border-slate-200\": hasToolbar\n        })}\n        onClick={() => setIsOpen((isOpen) => !isOpen)}\n      >\n        <div className=\"grow line-clamp-1\">\n          {groupTitle}\n        </div>\n        <ChevronRightIcon className={`h-5 w-5 ${isOpen ? 'rotate-90 transform' : ''}`} />\n      </div>\n      <div className={classnames(\"relative\", {\n        'hidden' : !isOpen,\n        'block': isOpen\n        })}>\n        <div className=\"px-2.5 pt-5\">\n          {children}\n        </div>\n        {hasToolbar && (\n          <div className=\"ml-3 mb-4\">\n            {hasRemove && (\n              <RemoveButton\n                disabled={disabled || readonly}\n                onClick={onDropIndexClick(index)}\n                registry={registry}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nimport {\n  ariaDescribedByIds,\n  examplesId,\n  FormContextType,\n  getInputProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\nexport default function BaseInputTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  id,\n  placeholder,\n  required,\n  readonly,\n  disabled,\n  type,\n  value,\n  onChange,\n  onBlur,\n  onFocus,\n  autofocus,\n  options,\n  schema,\n  rawErrors = [],\n  children,\n  extraProps,\n}: WidgetProps<T, S, F>) {\n  const inputProps = {\n    ...extraProps,\n    ...getInputProps<T, S, F>(schema, type, options),\n  };\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) =>\n    onChange(value === \"\" ? options.emptyValue : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  // const classNames = [rawErrors.length > 0 ? \"is-invalid\" : \"\", type === 'file' ? 'custom-file-label': \"\"]\n  return (\n    <>\n      <input\n        id={id}\n        name={id}\n        placeholder={placeholder}\n        autoFocus={autofocus}\n        required={required}\n        disabled={disabled}\n        readOnly={readonly}\n        className={classnames(\"mt-1 block w-full text-[15px] rounded-md border border-slate-300 shadow-sm focus:border-indigo-600 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\", {\n          \"is-invalid\": rawErrors.length > 0,\n          \"file:mr-3 file:font-medium file:text-sm file:border-none file:bg-slate-200 file:py-1 file:px-3 file:rounded-md file:cursor-pointer p-[7px]\": type === \"file\",\n          \"bg-white h-[42px] p-[5px] cursor-pointer\": type === \"color\"\n        })}\n        list={schema.examples ? examplesId<T>(id) : undefined}\n        {...inputProps}\n        value={value || value === 0 ? value : \"\"}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        aria-describedby={ariaDescribedByIds<T>(id, !!schema.examples)}\n      />\n      {children}\n      {Array.isArray(schema.examples) ? (\n        <datalist id={examplesId<T>(id)}>\n          {(schema.examples as string[])\n            .concat(\n              schema.default && !schema.examples.includes(schema.default)\n                ? ([schema.default] as string[])\n                : []\n            )\n            .map((example: any) => {\n              return <option key={example} value={example} />;\n            })}\n        </datalist>\n      ) : null}\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  DescriptionFieldProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nexport default function DescriptionField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ id, description }: DescriptionFieldProps<T, S, F>) {\n  if (description) {\n    return (\n      <>\n        <div id={id} className=\"mb-3\">\n          {description}\n        </div>\n      </>\n    );\n  }\n\n  return null;\n}\n","import React from \"react\";\nimport {\n  errorId,\n  FieldErrorProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `FieldErrorTemplate` component renders the errors local to the particular field\n *\n * @param props - The `FieldErrorProps` for the errors being rendered\n */\nexport default function FieldErrorTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldErrorProps<T, S, F>) {\n  const { errors = [], idSchema } = props;\n  if (errors.length === 0) {\n    return null;\n  }\n  const id = errorId<T>(idSchema);\n\n  return (\n    <div>\n      <ul id={id} className=\"error-detail bs-callout bs-callout-info\">\n        {errors\n          .filter((elem) => !!elem)\n          .map((error, index: number) => {\n            return (\n              <li className=\"text-red-700 text-sm\" key={index}>\n                {error}\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport {\n  FieldTemplateProps,\n  FormContextType,\n  getTemplate,\n  getUiOptions,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nexport default function FieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  id,\n  children,\n  displayLabel,\n  rawErrors = [],\n  errors,\n  help,\n  rawDescription,\n  classNames,\n  style,\n  disabled,\n  label,\n  hidden,\n  onDropPropertyClick,\n  onKeyChange,\n  readonly,\n  required,\n  schema,\n  uiSchema,\n  registry,\n}: FieldTemplateProps<T, S, F>) {\n  const uiOptions = getUiOptions(uiSchema);\n  const WrapIfAdditionalTemplate = getTemplate<\n    \"WrapIfAdditionalTemplate\",\n    T,\n    S,\n    F\n  >(\"WrapIfAdditionalTemplate\", registry, uiOptions);\n  if (hidden) {\n    return <div className=\"hidden\">{children}</div>;\n  }\n  return (\n    <WrapIfAdditionalTemplate\n      classNames={classNames}\n      style={style}\n      disabled={disabled}\n      id={id}\n      label={label}\n      onDropPropertyClick={onDropPropertyClick}\n      onKeyChange={onKeyChange}\n      readonly={readonly}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    >\n      <>\n        {displayLabel && label !== \" \" && (\n          <label\n            htmlFor={id}\n            className={classnames(\"block mb-2 text-sm font-medium\", {\n              \"text-red-700\": rawErrors.length > 0,\n              \"text-slate-700\": rawErrors.length < 0\n            })}\n          >\n            {label}\n            {required ? \"*\" : null}\n          </label>\n        )}\n        {children}\n        {displayLabel && rawDescription && (\n          <p\n            className={rawErrors.length > 0 ? \"text-red-700\" : \"text-slate-500\"}\n          >\n            {rawDescription}\n          </p>\n        )}\n        {errors}\n        {help}\n      </>\n    </WrapIfAdditionalTemplate>\n  );\n}\n","import React from \"react\";\nimport {\n  FormContextType,\n  IconButtonProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nimport { ArrowSmallUpIcon, ArrowSmallDownIcon, XMarkIcon, TrashIcon } from '@heroicons/react/20/solid';\n\nexport default function IconButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: IconButtonProps<T, S, F>) {\n  const { icon, iconType, className, registry, ...otherProps } =\n    props;\n  return (\n    <button {...otherProps} className=\"block rounded-[5px] border border-slate-200 p-0.5 mb-1 cursor-pointer\">\n      {icon === \"up\" ? <ArrowSmallUpIcon className={className} /> : null}\n      {icon === \"down\" ? <ArrowSmallDownIcon className={className} /> : null}\n      {icon === \"remove\" ? <XMarkIcon className={className} /> : null}\n    </button>\n  );\n}\n\nexport function MoveDownButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: IconButtonProps<T, S, F>) {\n  return (\n    <IconButton title=\"Move down\" {...props} icon=\"down\" />\n  );\n}\n\nexport function MoveUpButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: IconButtonProps<T, S, F>) {\n  return <IconButton title=\"Move up\" {...props} icon=\"up\" />;\n}\n\nexport function RemoveButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: IconButtonProps<T, S, F>) {\n  return (\n    <button {...props} className=\"flex items-center text-[13px] text-red-700 border border-red-700 rounded-[5px] py-0.5 px-2 hover:bg-red-700 hover:text-white\">\n      <TrashIcon className=\"w-3 h-3 mr-1\" />\n      Remove\n    </button>\n  );\n}\n","import React from \"react\";\n\nimport {\n  canExpand,\n  descriptionId,\n  FormContextType,\n  getTemplate,\n  getUiOptions,\n  ObjectFieldTemplateProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n  titleId,\n} from \"@rjsf/utils\";\n\nexport default function ObjectFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  description,\n  title,\n  properties,\n  required,\n  uiSchema,\n  idSchema,\n  schema,\n  formData,\n  onAddClick,\n  disabled,\n  readonly,\n  registry,\n}: ObjectFieldTemplateProps<T, S, F>) {\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\n  const TitleFieldTemplate = getTemplate<\"TitleFieldTemplate\", T, S, F>(\n    \"TitleFieldTemplate\",\n    registry,\n    uiOptions\n  );\n  const DescriptionFieldTemplate = getTemplate<\n    \"DescriptionFieldTemplate\",\n    T,\n    S,\n    F\n  >(\"DescriptionFieldTemplate\", registry, uiOptions);\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <>\n      {(uiOptions.title || title) && (\n        <TitleFieldTemplate\n          id={titleId<T>(idSchema)}\n          title={uiOptions.title || title}\n          required={required}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      {(uiOptions.description || description) && (\n        <DescriptionFieldTemplate\n          id={descriptionId<T>(idSchema)}\n          description={uiOptions.description || description!}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      <div className=\"p-0\">\n        {properties.map((element: any, index: number) => (\n          <div\n            key={index}\n            className={element.hidden ? \"d-none\" : \"mb-5\"}\n          >\n            {element.content}\n          </div>\n        ))}\n        {canExpand(schema, uiSchema, formData) ? (\n          <div className=\"py-4\">\n            <AddButton\n              onClick={onAddClick(schema)}\n              disabled={disabled || readonly}\n              className=\"object-property-expand\"\n              uiSchema={uiSchema}\n              registry={registry}\n            />\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  FormContextType,\n  getSubmitButtonOptions,\n  RJSFSchema,\n  StrictRJSFSchema,\n  SubmitButtonProps,\n} from \"@rjsf/utils\";\n\nexport default function SubmitButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: SubmitButtonProps<T, S, F>) {\n  const {\n    submitText,\n    norender,\n    props: submitButtonProps,\n  } = getSubmitButtonOptions<T, S, F>(props.uiSchema);\n  if (norender) {\n    return null;\n  }\n  return (\n    <div>\n      <button type=\"submit\" {...submitButtonProps}>\n        {submitText}\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  FormContextType,\n  getUiOptions,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TitleFieldProps,\n} from \"@rjsf/utils\";\n\nexport default function TitleField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ id, title, uiSchema }: TitleFieldProps<T, S, F>) {\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\n  return (\n    <div id={id} className=\"mb-4\">\n      <h5 className=\"block mb-2 text-sm font-medium\">{uiOptions.title || title}</h5>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport {\n  ADDITIONAL_PROPERTY_FLAG,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WrapIfAdditionalTemplateProps,\n} from \"@rjsf/utils\";\n\nexport default function WrapIfAdditionalTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  classNames,\n  style,\n  children,\n  disabled,\n  id,\n  label,\n  onDropPropertyClick,\n  onKeyChange,\n  readonly,\n  required,\n  schema,\n  uiSchema,\n  registry,\n}: WrapIfAdditionalTemplateProps<T, S, F>) {\n  // Button templates are not overridden in the uiSchema\n  const { RemoveButton } = registry.templates.ButtonTemplates;\n  const keyLabel = `${label} Key`; // i18n ?\n  const additional = ADDITIONAL_PROPERTY_FLAG in schema;\n\n  if (!additional) {\n    return (\n      <div className={classNames} style={style}>\n        {children}\n      </div>\n    );\n  }\n\n  return (\n    <div className={classNames} style={style}>\n      <div className=\"row\">\n        <div className=\"col-xs-5 form-additional\">\n          <div className=\"form-group\">\n            <label htmlFor={`${id}-key`}>{keyLabel}</label>\n            <input\n              className=\"form-control\"\n              required={required}\n              type=\"text\"\n              id={`${id}-key`}\n              onBlur={(event) => onKeyChange(event.target.value)}\n              defaultValue={label}\n            />\n          </div>\n        </div>\n        <div className=\"form-additional form-group col-xs-5\">{children}</div>\n        <div className=\"col-xs-2\">\n          <RemoveButton\n            className=\"array-item-remove btn-block\"\n            style={{ border: \"0\" }}\n            disabled={disabled || readonly}\n            onClick={onDropPropertyClick(label)}\n            uiSchema={uiSchema}\n            registry={registry}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import AddButton from \"../AddButton\";\nimport ArrayFieldTemplate from \"../ArrayFieldTemplate\";\nimport ArrayFieldItemTemplate from \"../ArrayFieldItemTemplate\";\nimport BaseInputTemplate from \"../BaseInputTemplate/BaseInputTemplate\";\nimport DescriptionField from \"../DescriptionField\";\nimport FieldErrorTemplate from \"../FieldErrorTemplate\";\nimport FieldTemplate from \"../FieldTemplate\";\nimport { MoveDownButton, MoveUpButton, RemoveButton } from \"../IconButton\";\nimport ObjectFieldTemplate from \"../ObjectFieldTemplate\";\nimport SubmitButton from \"../SubmitButton\";\nimport TitleField from \"../TitleField\";\nimport WrapIfAdditionalTemplate from \"../WrapIfAdditionalTemplate\";\n\nimport {\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TemplatesType,\n} from \"@rjsf/utils\";\n\nexport function generateTemplates<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): Partial<TemplatesType<T, S, F>> {\n  return {\n    ArrayFieldTemplate,\n    ArrayFieldItemTemplate,\n    BaseInputTemplate,\n    ButtonTemplates: {\n      AddButton,\n      MoveDownButton,\n      MoveUpButton,\n      RemoveButton,\n      SubmitButton\n    },\n    DescriptionFieldTemplate: DescriptionField,\n    FieldErrorTemplate,\n    FieldTemplate,\n    ObjectFieldTemplate,\n    TitleFieldTemplate: TitleField,\n    WrapIfAdditionalTemplate\n  };\n}\n\nexport default generateTemplates();\n","import React from \"react\";\nimport {\n  FormContextType,\n  getTemplate,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\nexport default function FileWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<\"BaseInputTemplate\", T, S, F>(\n    \"BaseInputTemplate\",\n    registry,\n    options\n  );\n  return <BaseInputTemplate {...props} type=\"file\" />;\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport {\n  ariaDescribedByIds,\n  FormContextType,\n  enumOptionsIndexForValue,\n  enumOptionsValueForIndex,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\nexport default function SelectWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  schema,\n  id,\n  options,\n  required,\n  disabled,\n  readonly,\n  value,\n  multiple,\n  autofocus,\n  onChange,\n  onBlur,\n  onFocus,\n  placeholder,\n  rawErrors = [],\n}: WidgetProps<T, S, F>) {\n  const { enumOptions, enumDisabled, emptyValue: optEmptyValue } = options;\n\n  const emptyValue = multiple ? [] : \"\";\n\n  function getValue(\n    event: React.FocusEvent | React.ChangeEvent | any,\n    multiple?: boolean\n  ) {\n    if (multiple) {\n      return [].slice\n        .call(event.target.options as any)\n        .filter((o: any) => o.selected)\n        .map((o: any) => o.value);\n    } else {\n      return event.target.value;\n    }\n  }\n  const selectedIndexes = enumOptionsIndexForValue<S>(\n    value,\n    enumOptions,\n    multiple\n  );\n\n  return (\n    <select\n      id={id}\n      name={id}\n      value={\n        typeof selectedIndexes === \"undefined\" ? emptyValue : selectedIndexes\n      }\n      required={required}\n      multiple={multiple}\n      disabled={disabled || readonly}\n      autoFocus={autofocus}\n      className={classnames(\"mt-1 block w-full text-[15px] rounded-md border-slate-300 shadow-sm focus:border-indigo-600 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\", {\n          \"is-invalid\": rawErrors.length > 0\n        })}\n      onBlur={\n        onBlur &&\n        ((event: React.FocusEvent) => {\n          const newValue = getValue(event, multiple);\n          onBlur(\n            id,\n            enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyValue)\n          );\n        })\n      }\n      onFocus={\n        onFocus &&\n        ((event: React.FocusEvent) => {\n          const newValue = getValue(event, multiple);\n          onFocus(\n            id,\n            enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyValue)\n          );\n        })\n      }\n      onChange={(event: React.ChangeEvent) => {\n        const newValue = getValue(event, multiple);\n        onChange(\n          enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyValue)\n        );\n      }}\n      aria-describedby={ariaDescribedByIds<T>(id)}\n    >\n      {!multiple && schema.default === undefined && (\n        <option value=\"\">{placeholder}</option>\n      )}\n      {(enumOptions as any).map(({ value, label }: any, i: number) => {\n        const disabled: any =\n          Array.isArray(enumDisabled) &&\n          (enumDisabled as any).indexOf(value) != -1;\n        return (\n          <option key={i} id={label} value={String(i)} disabled={disabled}>\n            {label}\n          </option>\n        );\n      })}\n    </select>\n  );\n}\n","import React from \"react\";\nimport {\n  ariaDescribedByIds,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\ntype CustomWidgetProps<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> = WidgetProps<T, S, F> & {\n  options: any;\n};\n\nexport default function TextareaWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  id,\n  placeholder,\n  value,\n  required,\n  disabled,\n  autofocus,\n  readonly,\n  onBlur,\n  onFocus,\n  onChange,\n  options,\n}: CustomWidgetProps<T, S, F>) {\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLTextAreaElement>) =>\n    onChange(value === \"\" ? options.emptyValue : value);\n  const _onBlur = ({\n    target: { value },\n  }: React.FocusEvent<HTMLTextAreaElement>) => onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLTextAreaElement>) => onFocus(id, value);\n\n  return (\n    <textarea\n      id={id}\n      name={id}\n      placeholder={placeholder}\n      disabled={disabled}\n      readOnly={readonly}\n      value={value}\n      required={required}\n      autoFocus={autofocus}\n      className=\"mt-1 block w-full text-[15px] rounded-md border-slate-300 shadow-sm focus:border-indigo-600 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n      rows={options.rows || 5}\n      onChange={_onChange}\n      onBlur={_onBlur}\n      onFocus={_onFocus}\n      aria-describedby={ariaDescribedByIds<T>(id)}\n    />\n  );\n}\n","import FileWidget from \"../FileWidget/FileWidget\";\nimport SelectWidget from \"../SelectWidget/SelectWidget\";\nimport TextareaWidget from \"../TextareaWidget/TextareaWidget\";\n\nimport {\n  FormContextType,\n  RegistryWidgetsType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nexport function generateWidgets<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): RegistryWidgetsType<T, S, F> {\n  return {\n    FileWidget,\n    SelectWidget,\n    TextareaWidget\n  };\n}\n\nexport default generateWidgets();\n","import { ThemeProps } from \"@rjsf/core\";\n\nimport { generateTemplates } from \"../Templates\";\nimport { generateWidgets } from \"../Widgets\";\nimport { FormContextType, RJSFSchema, StrictRJSFSchema } from \"@rjsf/utils\";\n\nexport function generateTheme<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): ThemeProps<T, S, F> {\n  return {\n    templates: generateTemplates<T, S, F>(),\n    widgets: generateWidgets<T, S, F>(),\n  };\n}\n\nexport default generateTheme();\n","import { ComponentType } from \"react\";\n\nimport { withTheme, FormProps } from \"@rjsf/core\";\nimport { generateTheme } from \"../Theme\";\nimport { FormContextType, RJSFSchema, StrictRJSFSchema } from \"@rjsf/utils\";\n\nexport function generateForm<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): ComponentType<FormProps<T, S, F>> {\n  return withTheme<T, S, F>(generateTheme<T, S, F>());\n}\n\nexport default generateForm();\n"],"names":["AddButton","_ref","uiSchema","props","_objectWithoutPropertiesLoose","_excluded","React","createElement","className","title","PlusIcon","ArrayFieldTemplate","canAdd","disabled","idSchema","items","onAddClick","readonly","registry","required","schema","uiOptions","getUiOptions","ArrayFieldDescriptionTemplate","getTemplate","ArrayFieldItemTemplate","ArrayFieldTitleTemplate","templates","ButtonTemplates","DndProvider","backend","HTML5Backend","id","$id","description","map","key","itemProps","_extends","onClick","children","hasToolbar","hasMoveDown","hasMoveUp","hasRemove","index","onDropIndexClick","onReorderClick","RemoveButton","useState","isOpen","_useState","setIsOpen","ref","useRef","draggableOptions","drop","useDrop","accept","hover","item","monitor","_ref$current","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","_useDrag","useDrag","type","collect","isDragging","opacity","drag","style","groupTitle","formData","classnames","ChevronRightIcon","hidden","block","BaseInputTemplate","placeholder","value","onChange","onBlur","onFocus","autofocus","options","_ref$rawErrors","rawErrors","inputProps","extraProps","getInputProps","Fragment","name","autoFocus","readOnly","length","list","examples","examplesId","undefined","_ref2","target","emptyValue","_ref3","_ref4","ariaDescribedByIds","Array","isArray","concat","includes","example","DescriptionField","FieldErrorTemplate","errors","_props$errors","errorId","filter","elem","error","FieldTemplate","displayLabel","help","rawDescription","classNames","label","onDropPropertyClick","onKeyChange","WrapIfAdditionalTemplate","htmlFor","IconButton","icon","otherProps","ArrowSmallUpIcon","ArrowSmallDownIcon","XMarkIcon","MoveDownButton","MoveUpButton","TrashIcon","ObjectFieldTemplate","properties","TitleFieldTemplate","DescriptionFieldTemplate","titleId","descriptionId","element","content","canExpand","SubmitButton","_getSubmitButtonOptio","getSubmitButtonOptions","submitText","norender","TitleField","ADDITIONAL_PROPERTY_FLAG","event","defaultValue","border","generateTemplates","Templates","FileWidget","SelectWidget","multiple","enumOptions","enumDisabled","optEmptyValue","getValue","slice","call","o","selected","selectedIndexes","enumOptionsIndexForValue","newValue","enumOptionsValueForIndex","i","indexOf","String","TextareaWidget","rows","generateWidgets","Widgets","generateTheme","widgets","Theme","generateForm","withTheme","Form"],"mappings":"uuBASwB,SAAAA,EAIoCC,GAAxDC,IAAuBC,EAAKC,EAAAH,EAAAI,GAC9B,OACEC,EAAAA,QAAAC,cAAA,cACMJ,EAAK,CACTK,UAAS,4JAA8JL,EAAMK,UAC7KC,MAAM,aAENH,EAAAA,QAAAC,cAACG,WAAQ,CAACF,UAAU,2BAEb,WAEb,eCLwB,SAAAG,EAItBR,GACA,IACES,EAYET,EAZFS,OACAJ,EAWEL,EAXFK,UACAK,EAUEV,EAVFU,SACAC,EASEX,EATFW,SACAZ,EAQEC,EARFD,SACAa,EAOEZ,EAPFY,MACAC,EAMEb,EANFa,WACAC,EAKEd,EALFc,SACAC,EAIEf,EAJFe,SACAC,EAGEhB,EAHFgB,SACAC,EAEEjB,EAFFiB,OACAX,EACEN,EADFM,MAEIY,EAAYC,eAAsBpB,GAClCqB,EAAgCC,EAAWA,YAK/C,gCAAiCN,EAAUG,GACvCI,EAAyBD,EAAWA,YACxC,yBACAN,EACAG,GAEIK,EAA0BF,EAAWA,YAKzC,0BAA2BN,EAAUG,GAGlBrB,EACjBkB,EAASS,UADXC,gBAAmB5B,UAErB,OACEM,EAAC,QAAAC,cAAAsB,cAAY,CAAAC,QAASC,EAAAA,cACpBzB,EAAU,QAAAC,cAAA,WAAA,CAAAC,UAAWA,EAAWwB,GAAIlB,EAASmB,KAC3C3B,EAAA,QAAAC,cAACmB,EAAuB,CACtBZ,SAAUA,EACVL,MAAOY,EAAUZ,OAASA,EAC1BU,SAAUA,EACVC,OAAQA,EACRlB,SAAUA,EACVgB,SAAUA,IAEZZ,EAAAA,QAACC,cAAAgB,EACC,CAAAT,SAAUA,EACVoB,YAAab,EAAUa,aAAed,EAAOc,YAC7Cd,OAAQA,EACRlB,SAAUA,EACVgB,SAAUA,IAEZZ,EAAAA,QAAAC,cAAA,MAAA,CAAKC,UAAU,uBACZO,GACCA,EAAMoB,KACJ,SAAAlC,GAAA,IAAGmC,IAAAA,IAAQC,EAASjC,EAAAH,EAAAI,GAAA,OAClBC,UAAAC,cAACkB,EAAsBa,EAAA,CAACF,IAAKA,GAASC,GACvC,KAGNzB,GACCN,UAACC,cAAAP,EACC,CAAAQ,UAAU,iBACV+B,QAASvB,EACTH,SAAUA,GAAYI,EACtBf,SAAUA,EACVgB,SAAUA,KAMtB,CCjFwB,SAAAO,EAItBtB,GACA,IACEqC,EAYErC,EAZFqC,SACAhC,EAWEL,EAXFK,UACAK,EAUEV,EAVFU,SACA4B,EASEtC,EATFsC,WACAC,EAQEvC,EARFuC,YACAC,EAOExC,EAPFwC,UACAC,EAMEzC,EANFyC,UACAC,EAKE1C,EALF0C,MACAC,EAIE3C,EAJF2C,iBACAC,EAGE5C,EAHF4C,eACA9B,EAEEd,EAFFc,SACAC,EACEf,EADFe,SAEM8B,EACN9B,EAASS,UAAUC,gBADboB,aAGoBC,EAAAA,EAAQA,UAAC,GAA9BC,EAAMC,EAAA,GAAEC,EAASD,EAAA,GAElBE,EAAMC,SAAyB,MACjCC,EAAmB,CAAA,EACvB,GAAIZ,GAAaD,EAAa,CAC5B,IAASc,EAAQC,EAAAA,QAAQ,CACvBC,OAAQ,OACRC,MAAMC,SAAAA,EAAWC,GAAO,IAAAC,EACtB,GAAKT,EAAIU,QAAT,CAGA,IAAMC,EAAYJ,EAAKf,MACjBoB,EAAapB,EAEnB,GAAImB,IAAcC,EAAlB,CAIA,IAAMC,EAAoB,SAAAb,EAAIU,cAAJ,EAAAD,EAAaK,wBAEjCC,GACHF,EAAkBG,OAASH,EAAkBI,KAAO,EAIjDC,EAFeV,EAAQW,kBAEkBC,EAAIP,EAAkBI,IAKjEN,EAAYC,GAAcM,EAAeH,GAIzCJ,EAAYC,GAAcM,EAAeH,IAK7CrB,EAAeiB,EAAWC,EAA1BlB,CAAsC,IAOtCa,EAAKf,MAAQoB,EA9BZ,CANA,CAqCH,IA1CW,GA6CbS,EAA+BC,EAAAA,QAAQ,CACrCC,KAAM,OACNhB,KAAM,WACJ,MAAO,CAAEf,MAAAA,EACV,EACDgC,QAAS,SAAChB,GAAY,MAAM,CAC1BiB,WAAYjB,EAAQiB,aACrB,IAGGC,OAVGD,WAUoB,GAAM,GACnCE,EAX2BN,EAAA,IAWtBlB,EAAKH,IAEVE,EAAmB,CACjB0B,MAAO,CAACF,QAAAA,GAEX,CAED,IAAIG,EAAa,WAOjB,OANI1C,EAASrC,MAAMgF,UACb3C,EAASrC,MAAMgF,SAAS1E,QAC1ByE,EAAa1C,EAASrC,MAAMgF,SAAS1E,OAKvCH,UAAAC,cAAA,MAAA+B,EAAA,CAAK9B,UAAcA,EAAgB,QAAE6C,IAAKA,GAASE,GACjDjD,UAAAC,cAAA,MAAA,CACEC,UAAW4E,EAAU,QAAC,0GAA2G,CAC/H,gBAAiB3C,EACjB,0BAA2BA,IAE7BF,QAAS,WAAA,OAAMa,GAAU,SAACF,GAAM,OAAMA,IAAO,GAE7C5C,EAAA,QAAAC,cAAA,MAAA,CAAKC,UAAU,qBACZ0E,GAEH5E,UAAAC,cAAC8E,EAAAA,iBAAiB,CAAA7E,UAAsB0C,YAAAA,EAAS,sBAAwB,OAE3E5C,EAAAA,QAAAC,cAAA,MAAA,CAAKC,UAAW4E,EAAU,QAAC,WAAY,CACrCE,QAAYpC,EACZqC,MAASrC,KAET5C,EAAA,QAAAC,cAAA,MAAA,CAAKC,UAAU,eACZgC,GAEFC,GACCnC,EAAAA,QAAAC,cAAA,MAAA,CAAKC,UAAU,aACZoC,GACCtC,EAAAA,sBAAC0C,EAAY,CACXnC,SAAUA,GAAYI,EACtBsB,QAASO,EAAiBD,GAC1B3B,SAAUA,MAQ1B,CCxIc,SAAUsE,EAqBDvF,GAAA,IAhBrB+B,IAAAA,GACAyD,IAAAA,YACAtE,IAAAA,SACAF,IAAAA,SACAJ,IAAAA,SACA+D,IAAAA,KACAc,IAAAA,MACAC,IAAAA,SACAC,IAAAA,OACAC,IAAAA,QACAC,IAAAA,UACAC,IAAAA,QACA3E,IAAAA,OAAM4E,EAAA/F,EACNgG,UAAAA,aAAY,GAAED,EACdxD,IAAAA,SAGM0D,EAAU5D,EAAA,CAAA,IAFhB6D,WAIKC,EAAaA,cAAUhF,EAAQwD,EAAMmB,IAa1C,OACEzF,EAAA,QAAAC,cAAAD,EAAAA,QAAA+F,SAAA,KACE/F,UAAAC,cAAA,QAAA+B,EAAA,CACEN,GAAIA,EACJsE,KAAMtE,EACNyD,YAAaA,EACbc,UAAWT,EACX3E,SAAUA,EACVN,SAAUA,EACV2F,SAAUvF,EACVT,UAAW4E,EAAU,QAAC,4JAA6J,CACjL,aAAca,EAAUQ,OAAS,EACjC,6IAAuJ,SAAT7B,EAC9I,2CAAqD,UAATA,IAE9C8B,KAAMtF,EAAOuF,SAAWC,EAAAA,WAAc5E,QAAM6E,GACxCX,EAAU,CACdR,MAAOA,GAAmB,IAAVA,EAAcA,EAAQ,GACtCC,SA7BY,SAAHmB,GAAA,IACHpB,EAAKoB,EAAfC,OAAUrB,MAAK,OAEfC,EAAmB,KAAVD,EAAeK,EAAQiB,WAAatB,EAAM,EA2B/CE,OA1BU,SAAHqB,GAAqB,OAChCrB,EAAO5D,EADyBiF,EAAfF,OAAUrB,MACV,EA0BbG,QAzBW,SAAHqB,GACG,OACyBrB,EAAQ7D,EADjCkF,EAAfH,OAAUrB,MACgD,EAuBrC,mBACCyB,EAAAA,mBAAsBnF,IAAMZ,EAAOuF,aAEtDnE,EACA4E,MAAMC,QAAQjG,EAAOuF,UACpBrG,EAAAA,QAAUC,cAAA,WAAA,CAAAyB,GAAI4E,EAAUA,WAAI5E,IACxBZ,EAAOuF,SACNW,OACClG,EAAM,UAAaA,EAAOuF,SAASY,SAASnG,EAAc,SACrD,CAACA,EAAc,SAChB,IAELe,KAAI,SAACqF,GACJ,OAAOlH,EAAA,QAAAC,cAAA,SAAA,CAAQ6B,IAAKoF,EAAS9B,MAAO8B,GACtC,KAEF,KAGV,CCjFwB,SAAAC,EAI6BxH,GAAA,IAA7CiC,IAAAA,YACN,OAAIA,EAEA5B,EAAA,QAAAC,cAAAD,UAAA+F,SAAA,KACE/F,EAAA,QAAAC,cAAA,MAAA,CAAKyB,KAJTA,GAIiBxB,UAAU,QACpB0B,IAMF,IACT,CCXwB,SAAAwF,EAItBvH,GACA,IAAkCA,EAAAA,EAA1BwH,OAAAA,aAAS,GAAEC,EACnB,GAAsB,IAAlBD,EAAOlB,OACT,OAAO,KAET,IAAMzE,EAAK6F,UAJuB1H,EAAbW,UAMrB,OACER,EAAAA,QAAAC,cAAA,MAAA,KACED,EAAI,QAAAC,cAAA,KAAA,CAAAyB,GAAIA,EAAIxB,UAAU,2CACnBmH,EACEG,QAAO,SAACC,GAAI,QAAOA,CAAI,IACvB5F,KAAI,SAAC6F,EAAOnF,GACX,OACEvC,EAAA,QAAAC,cAAA,KAAA,CAAIC,UAAU,uBAAuB4B,IAAKS,GACvCmF,EAGN,KAIX,CC5BwB,SAAAC,EAwBMhI,GAAA,IAnB5B+B,IAAAA,GACAQ,IAAAA,SACA0F,IAAAA,aAAYlC,EAAA/F,EACZgG,UAAAA,aAAY,GAAED,EACd2B,IAAAA,OACAQ,IAAAA,KACAC,IAAAA,eACAC,IAAAA,WACApD,IAAAA,MACApE,IAAAA,SACAyH,IAAAA,MACAhD,IAAAA,OACAiD,IAAAA,oBACAC,IAAAA,YACAvH,IAAAA,SACAE,IAAAA,SACAC,IAAAA,OACAlB,IAAAA,SACAgB,IAAAA,SAEMG,EAAYC,eAAapB,GACzBuI,EAA2BjH,EAAWA,YAK1C,2BAA4BN,EAAUG,GACxC,OAAIiE,EACKhF,+BAAKE,UAAU,UAAUgC,GAGhClC,wBAACmI,EAAwB,CACvBJ,WAAYA,EACZpD,MAAOA,EACPpE,SAAUA,EACVmB,GAAIA,EACJsG,MAAOA,EACPC,oBAAqBA,EACrBC,YAAaA,EACbvH,SAAUA,EACVE,SAAUA,EACVC,OAAQA,EACRlB,SAAUA,EACVgB,SAAUA,GAEVZ,UAAAC,cAAAD,EAAA,QAAA+F,SAAA,KACG6B,GAA0B,MAAVI,GACfhI,UACEC,cAAA,QAAA,CAAAmI,QAAS1G,EACTxB,UAAW4E,EAAU,QAAC,iCAAkC,CACtD,eAAgBa,EAAUQ,OAAS,EACnC,iBAAkBR,EAAUQ,OAAS,KAGtC6B,EACAnH,EAAW,IAAM,MAGrBqB,EACA0F,GAAgBE,GACf9H,6BACEE,UAAWyF,EAAUQ,OAAS,EAAI,eAAiB,kBAElD2B,GAGJT,EACAQ,GAIT,kDC7EwB,SAAAQ,EAItBxI,GACA,IAAQyI,EACNzI,EADMyI,KAAgBpI,EACtBL,EADsBK,UAAwBqI,IAC9C1I,EAAKE,GACP,OACEC,EAAAA,QAAYC,cAAA,cAAAsI,EAAU,CAAErI,UAAU,0EACtB,OAAToI,EAAgBtI,EAAAA,QAACC,cAAAuI,EAAAA,iBAAiB,CAAAtI,UAAWA,IAAgB,KACpD,SAAToI,EAAkBtI,EAAC,QAAAC,cAAAwI,qBAAmB,CAAAvI,UAAWA,IAAgB,KACxD,WAAToI,EAAoBtI,EAAA,QAAAC,cAACyI,YAAU,CAAAxI,UAAWA,IAAgB,KAGjE,CAEM,SAAUyI,EAId9I,GACA,OACEG,UAAAC,cAACoI,EAAUrG,EAAA,CAAC7B,MAAM,aAAgBN,EAAK,CAAEyI,KAAK,SAElD,CAEM,SAAUM,EAId/I,GACA,OAAOG,UAACC,cAAAoI,EAAUrG,EAAA,CAAC7B,MAAM,WAAcN,EAAK,CAAEyI,KAAK,OACrD,CAEM,SAAU5F,EAId7C,GACA,OACEG,EAAAA,QAAYC,cAAA,cAAAJ,EAAK,CAAEK,UAAU,iIAC3BF,EAAAA,QAAAC,cAAC4I,YAAS,CAAC3I,UAAU,iBAEd,SAEb,CCzCwB,SAAA4I,EAiBYnJ,GAAA,IAZlCiC,IAAAA,YACAzB,IAAAA,MACA4I,IAAAA,WACAlI,IAAAA,SACAjB,IAAAA,SACAY,IAAAA,SACAM,IAAAA,OACA+D,IAAAA,SACAnE,IAAAA,WACAH,IAAAA,SACAI,IAAAA,SACAC,IAAAA,SAEMG,EAAYC,eAAsBpB,GAClCoJ,EAAqB9H,EAAWA,YACpC,qBACAN,EACAG,GAEIkI,EAA2B/H,EAAWA,YAK1C,2BAA4BN,EAAUG,GAGnBrB,EACjBkB,EAASS,UADXC,gBAAmB5B,UAErB,OACEM,UAAAC,cAAAD,EAAA,QAAA+F,SAAA,MACIhF,EAAUZ,OAASA,IACnBH,UAAAC,cAAC+I,EACC,CAAAtH,GAAIwH,EAAOA,QAAI1I,GACfL,MAAOY,EAAUZ,OAASA,EAC1BU,SAAUA,EACVC,OAAQA,EACRlB,SAAUA,EACVgB,SAAUA,KAGZG,EAAUa,aAAeA,IACzB5B,EAAC,QAAAC,cAAAgJ,GACCvH,GAAIyH,EAAaA,cAAI3I,GACrBoB,YAAab,EAAUa,aAAeA,EACtCd,OAAQA,EACRlB,SAAUA,EACVgB,SAAUA,IAGdZ,EAAAA,QAAKC,cAAA,MAAA,CAAAC,UAAU,OACZ6I,EAAWlH,KAAI,SAACuH,EAAc7G,GAAa,OAC1CvC,EAAA,QAAAC,cAAA,MAAA,CACE6B,IAAKS,EACLrC,UAAWkJ,EAAQpE,OAAS,SAAW,QAEtCoE,EAAQC,QACL,IAEPC,EAAAA,UAAUxI,EAAQlB,EAAUiF,GAC3B7E,EAAK,QAAAC,cAAA,MAAA,CAAAC,UAAU,QACbF,EAAA,QAAAC,cAACP,EACC,CAAAuC,QAASvB,EAAWI,GACpBP,SAAUA,GAAYI,EACtBT,UAAU,yBACVN,SAAUA,EACVgB,SAAUA,KAGZ,MAIZ,CCnFwB,SAAA2I,EAItB1J,GACA,IAAA2J,EAIIC,EAAAA,uBAAgC5J,EAAMD,UAHxC8J,IAAAA,WAIF,SAHEC,SAIO,KAGP3J,EAAA,QAAAC,cAAA,MAAA,KACED,EAAAA,QAAQC,cAAA,SAAA+B,EAAA,CAAAsC,KAAK,YAPfzE,OAQK6J,GAIT,CCpBc,SAAUE,EAI2BjK,GAAA,IAA/C+B,IAAAA,GAAIvB,IAAAA,MACAY,EAAYC,iBADLpB,UAEb,OACEI,+BAAK0B,GAAIA,EAAIxB,UAAU,QACrBF,EAAA,QAAAC,cAAA,KAAA,CAAIC,UAAU,kCAAkCa,EAAUZ,OAASA,GAGzE,CCVwB,SAAAgI,EAkBiBxI,GAAA,IAXvCuC,IAAAA,SACA3B,IAAAA,SACAmB,IAAAA,GACAsG,IAAAA,MACAC,IAAAA,oBACAC,IAAAA,YACAvH,IAAAA,SACAE,IAAAA,SAEAjB,IAAAA,SACAgB,IAAAA,SAGQ8B,EAAiB9B,EAASS,UAAUC,gBAApCoB,aAIR,OASE1C,+BAAKE,YA5BP6H,WA4B8BpD,QA3B9BA,OAgBmBkF,gCAPnB/I,OAmBId,EAAK,QAAAC,cAAA,MAAA,CAAAC,UAAU,OACbF,EAAK,QAAAC,cAAA,MAAA,CAAAC,UAAU,4BACbF,EAAK,QAAAC,cAAA,MAAA,CAAAC,UAAU,cACbF,EAAA,QAAAC,cAAA,QAAA,CAAOmI,QAAY1G,EAAE,QAhBXsG,EAAK,QAiBfhI,UAAAC,cAAA,QAAA,CACEC,UAAU,eACVW,SAAUA,EACVyD,KAAK,OACL5C,GAAOA,EAAQ,OACf4D,OAAQ,SAACwE,GAAK,OAAK5B,EAAY4B,EAAMrD,OAAOrB,MAAM,EAClD2E,aAAc/B,MAIpBhI,UAAAC,cAAA,MAAA,CAAKC,UAAU,uCAAuCgC,GACtDlC,UAAKC,cAAA,MAAA,CAAAC,UAAU,YACbF,EAAA,QAAAC,cAACyC,EACC,CAAAxC,UAAU,8BACVyE,MAAO,CAAEqF,OAAQ,KACjBzJ,SAAUA,GAAYI,EACtBsB,QAASgG,EAAoBD,GAC7BpI,SAAUA,EACVgB,SAAUA,MA7BbsB,EAmCT,UCpDgB+H,IAKd,MAAO,CACL5J,mBAAAA,EACAc,uBAAAA,EACA+D,kBAAAA,EACA5D,gBAAiB,CACf5B,UAAAA,EACAiJ,eAAAA,EACAC,aAAAA,EACAlG,aAAAA,EACA6G,aAAAA,GAEFN,yBAA0B9B,EAC1BC,mBAAAA,EACAO,cAAAA,EACAmB,oBAAAA,EACAE,mBAAoBY,EACpBzB,yBAAAA,EAEJ,CAEA,IAAA+B,EAAeD,ICpCS,SAAAE,EAItBtK,GACA,IACMqF,EAAoBhE,EAAWA,YACnC,oBAF4BrB,EAAbe,SAAaf,EAAtB4F,SAMR,OAAOzF,EAAAA,QAAAC,cAACiF,OAAsBrF,EAAK,CAAEyE,KAAK,SAC5C,CCTwB,SAAA8F,EAmBDzK,GAAA,IAdrBmB,IAAAA,OACAY,IAAAA,GACA+D,IAAAA,QACA5E,IAAAA,SACAN,IAAAA,SACAI,IAAAA,SAEA0J,IAAAA,SACA7E,IAAAA,UACAH,IAAAA,SACAC,IAAAA,OACAC,IAAAA,QACAJ,IAAAA,YAAWO,EAAA/F,EACXgG,UAAAA,aAAY,GAAED,EAEN4E,EAAyD7E,EAAzD6E,YAAaC,EAA4C9E,EAA5C8E,aAA0BC,EAAkB/E,EAA9BiB,WAE7BA,EAAa2D,EAAW,GAAK,GAEnC,SAASI,EACPX,EACAO,GAEA,OAAIA,EACK,GAAGK,MACPC,KAAKb,EAAMrD,OAAOhB,SAClB+B,QAAO,SAACoD,GAAM,OAAKA,EAAEC,QAAQ,IAC7BhJ,KAAI,SAAC+I,GAAM,OAAKA,EAAExF,SAEd0E,EAAMrD,OAAOrB,KAExB,CACA,IAAM0F,EAAkBC,EAAwBA,2BA1BhD3F,MA4BEkF,EACAD,GAGF,OACErK,kCACE0B,GAAIA,EACJsE,KAAMtE,EACN0D,WAC6B,IAApB0F,EAAkCpE,EAAaoE,EAExDjK,SAAUA,EACVwJ,SAAUA,EACV9J,SAAUA,GAAYI,EACtBsF,UAAWT,EACXtF,UAAW4E,EAAU,QAAC,qJAAsJ,CACxK,aAAca,EAAUQ,OAAS,IAErCb,OACEA,GACC,SAACwE,GACA,IAAMkB,EAAWP,EAASX,EAAOO,GACjC/E,EACE5D,EACAuJ,EAAwBA,yBAAID,EAAUV,EAAaE,GAErD,EAEJjF,QACEA,GACC,SAACuE,GACA,IAAMkB,EAAWP,EAASX,EAAOO,GACjC9E,EACE7D,EACAuJ,EAAwBA,yBAAID,EAAUV,EAAaE,GAErD,EAEJnF,SAAU,SAACyE,GACT,IAAMkB,EAAWP,EAASX,EAAOO,GACjChF,EACE4F,EAAAA,yBAA4BD,EAAUV,EAAaE,GAEtD,EACiB,mBAAA3D,EAAkBA,mBAAInF,KAEtC2I,QAA+B9D,IAAnBzF,EAAc,SAC1Bd,EAAA,QAAAC,cAAA,SAAA,CAAQmF,MAAM,IAAID,GAElBmF,EAAoBzI,KAAI,SAAwBqJ,EAAAA,GAAa,IAAlC9F,IAAAA,MAAO4C,IAAAA,MAC5BzH,EACJuG,MAAMC,QAAQwD,KAC2B,GAAxCA,EAAqBY,QAAQ/F,GAChC,OACEpF,EAAQ,QAAAC,cAAA,SAAA,CAAA6B,IAAKoJ,EAAGxJ,GAAIsG,EAAO5C,MAAOgG,OAAOF,GAAI3K,SAAUA,GACpDyH,EAGN,IAGP,CC/Fc,SAAUqD,EAgBK1L,GAAA,IAX3B+B,IAAAA,GAOA4D,IAAAA,OACAC,IAAAA,QACAF,IAAAA,SACAI,IAAAA,QAaA,OACEzF,EAAA,QAAAC,cAAA,WAAA,CACEyB,GAAIA,EACJsE,KAAMtE,EACNyD,cA1BJA,YA2BI5E,WAxBJA,SAyBI2F,WAvBJvF,SAwBIyE,QA5BJA,MA6BIvE,WA5BJA,SA6BIoF,YA3BJT,UA4BItF,UAAU,qJACVoL,KAAM7F,EAAQ6F,MAAQ,EACtBjG,SAvBc,SAAHmB,GAAA,IACHpB,EAAKoB,EAAfC,OAAUrB,MAAK,OAEfC,EAAmB,KAAVD,EAAeK,EAAQiB,WAAatB,EAAM,EAqBjDE,OApBY,SAAHqB,GACI,OAC4BrB,EAAO5D,EADnCiF,EAAfF,OAAUrB,MACkD,EAmB1DG,QAlBa,SAAHqB,GACG,OAC4BrB,EAAQ7D,EADpCkF,EAAfH,OAAUrB,MACmD,EAiBzC,mBAAAyB,EAAkBA,mBAAInF,IAG9C,UCpDgB6J,IAKd,MAAO,CACLpB,WAAAA,EACAC,aAAAA,EACAiB,eAAAA,EAEJ,CAEA,IAAAG,EAAeD,aCjBCE,IAKd,MAAO,CACLpK,UAAW4I,IACXyB,QAASH,IAEb,CAEA,IAAAI,EAAeF,aCXCG,IAKd,OAAOC,EAASA,UAAUJ,IAC5B,CAEA,IAAAK,EAAeF"}
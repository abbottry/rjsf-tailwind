{"version":3,"file":"rjsf-tailwind.cjs.production.min.js","sources":["../src/AddButton/AddButton.tsx","../src/ArrayFieldTemplate/ArrayFieldTemplate.tsx","../src/ArrayFieldItemTemplate/ArrayFieldItemTemplate.tsx","../src/BaseInputTemplate/BaseInputTemplate.tsx","../src/DescriptionField/DescriptionField.tsx","../src/FieldErrorTemplate/FieldErrorTemplate.tsx","../src/FieldTemplate/FieldTemplate.tsx","../src/IconButton/IconButton.tsx","../src/ObjectFieldTemplate/ObjectFieldTemplate.tsx","../src/SubmitButton/SubmitButton.tsx","../src/TitleField/TitleField.tsx","../src/WrapIfAdditionalTemplate/WrapIfAdditionalTemplate.tsx","../src/Templates/Templates.ts","../src/SelectWidget/SelectWidget.tsx","../src/TextareaWidget/TextareaWidget.tsx","../src/Widgets/Widgets.ts","../src/Theme/Theme.tsx","../src/Form/Form.tsx"],"sourcesContent":["import React from \"react\";\nimport { PlusIcon } from '@heroicons/react/20/solid';\nimport {\n  FormContextType,\n  IconButtonProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nexport default function AddButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ uiSchema, registry, ...props }: IconButtonProps<T, S, F>) {\n  return (\n    <button\n      {...props}\n      className={`flex items-center w-full px-3 py-[9px] rounded text-sm text-left text-slate-700 font-medium border border-dashed border-slate-300 hover:border-slate-400 ${props.className}`}\n      title=\"Add Item\"\n    >\n      <PlusIcon className=\"w-[18px] h-[18px] mr-2\" />\n      Add Item\n    </button>\n  );\n}\n","import React from \"react\";\nimport {\n  getTemplate,\n  getUiOptions,\n  ArrayFieldTemplateProps,\n  ArrayFieldTemplateItemType,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `ArrayFieldTemplate` component is the template used to render all items in an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTemplateProps<T, S, F>) {\n  const {\n    canAdd,\n    className,\n    disabled,\n    idSchema,\n    uiSchema,\n    items,\n    onAddClick,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n  } = props;\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\n  const ArrayFieldDescriptionTemplate = getTemplate<\n    \"ArrayFieldDescriptionTemplate\",\n    T,\n    S,\n    F\n  >(\"ArrayFieldDescriptionTemplate\", registry, uiOptions);\n  const ArrayFieldItemTemplate = getTemplate<\"ArrayFieldItemTemplate\", T, S, F>(\n    \"ArrayFieldItemTemplate\",\n    registry,\n    uiOptions\n  );\n  const ArrayFieldTitleTemplate = getTemplate<\n    \"ArrayFieldTitleTemplate\",\n    T,\n    S,\n    F\n  >(\"ArrayFieldTitleTemplate\", registry, uiOptions);\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <fieldset className={className} id={idSchema.$id}>\n      <ArrayFieldTitleTemplate\n        idSchema={idSchema}\n        title={uiOptions.title || title}\n        required={required}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n      <ArrayFieldDescriptionTemplate\n        idSchema={idSchema}\n        description={uiOptions.description || schema.description}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n      <div className=\"row array-item-list\">\n        {items &&\n          items.map(\n            ({ key, ...itemProps }: ArrayFieldTemplateItemType<T, S, F>) => (\n              <ArrayFieldItemTemplate key={key} {...itemProps} />\n            )\n          )}\n      </div>\n      {canAdd && (\n        <AddButton\n          className=\"array-item-add\"\n          onClick={onAddClick}\n          disabled={disabled || readonly}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n    </fieldset>\n  );\n}\n","import React, { useState } from \"react\";\nimport classnames from \"classnames\";\nimport { ChevronRightIcon } from '@heroicons/react/20/solid';\nimport {\n  ArrayFieldTemplateItemType,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `ArrayFieldItemTemplate` component is the template used to render an items of an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldItemTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTemplateItemType<T, S, F>) {\n  const {\n    children,\n    className,\n    disabled,\n    hasToolbar,\n    hasMoveDown,\n    hasMoveUp,\n    hasRemove,\n    index,\n    onDropIndexClick,\n    onReorderClick,\n    readonly,\n    registry,\n    uiSchema,\n  } = props;\n  const { MoveDownButton, MoveUpButton, RemoveButton } =\n    registry.templates.ButtonTemplates;\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div className={`${className} mb-4`}>\n      <div \n        className={classnames(\"flex items-center w-full p-3 py-2.5 rounded text-sm text-left text-slate-700 font-medium cursor-pointer\", {\n          \"bg-slate-100\": !hasToolbar,\n          \"border border-slate-200\": hasToolbar\n        })}\n        onClick={() => setIsOpen((isOpen) => !isOpen)}\n      >\n        <div className=\"grow line-clamp-1\">{children.props.formData ? children.props.formData.title : \"Untitled\"}</div>\n        <ChevronRightIcon className={`h-5 w-5 ${isOpen ? 'rotate-90 transform' : ''}`} />\n      </div>\n      <div className={classnames(\"relative\", {\n        'hidden' : !isOpen,\n        'block': isOpen\n        })}>\n        <div className=\"px-2.5 pt-5\">\n          {children}\n        </div>\n        {hasToolbar && (\n          <div className=\"absolute top-[-40px] right-[-27px]\">\n            <div\n              className=\"btn-group\"\n            >\n              {(hasMoveUp || hasMoveDown) && (\n                <MoveUpButton\n                  className=\"w-[18px] h-[18px] text-slate-700\"\n                  disabled={disabled || readonly || !hasMoveUp}\n                  onClick={onReorderClick(index, index - 1)}\n                  uiSchema={uiSchema}\n                  registry={registry}\n                />\n              )}\n              {(hasMoveUp || hasMoveDown) && (\n                <MoveDownButton\n                  className=\"w-[18px] h-[18px] text-slate-700\"\n                  disabled={disabled || readonly || !hasMoveDown}\n                  onClick={onReorderClick(index, index + 1)}\n                  uiSchema={uiSchema}\n                  registry={registry}\n                />\n              )}\n              {hasRemove && (\n                <RemoveButton\n                  className=\"w-[18px] h-[18px] text-red-700\"\n                  disabled={disabled || readonly}\n                  onClick={onDropIndexClick(index)}\n                  uiSchema={uiSchema}\n                  registry={registry}\n                />\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nimport {\n  ariaDescribedByIds,\n  examplesId,\n  FormContextType,\n  getInputProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\nexport default function BaseInputTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  id,\n  placeholder,\n  required,\n  readonly,\n  disabled,\n  type,\n  value,\n  onChange,\n  onBlur,\n  onFocus,\n  autofocus,\n  options,\n  schema,\n  rawErrors = [],\n  children,\n  extraProps,\n}: WidgetProps<T, S, F>) {\n  const inputProps = {\n    ...extraProps,\n    ...getInputProps<T, S, F>(schema, type, options),\n  };\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) =>\n    onChange(value === \"\" ? options.emptyValue : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  // const classNames = [rawErrors.length > 0 ? \"is-invalid\" : \"\", type === 'file' ? 'custom-file-label': \"\"]\n  return (\n    <>\n      <input\n        id={id}\n        name={id}\n        placeholder={placeholder}\n        autoFocus={autofocus}\n        required={required}\n        disabled={disabled}\n        readOnly={readonly}\n        className={classnames(\"mt-1 block w-full rounded-md border-slate-300 shadow-sm focus:border-indigo-600 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\", {\n          \"is-invalid\": rawErrors.length > 0\n        })}\n        list={schema.examples ? examplesId<T>(id) : undefined}\n        {...inputProps}\n        value={value || value === 0 ? value : \"\"}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        aria-describedby={ariaDescribedByIds<T>(id, !!schema.examples)}\n      />\n      {children}\n      {Array.isArray(schema.examples) ? (\n        <datalist id={examplesId<T>(id)}>\n          {(schema.examples as string[])\n            .concat(\n              schema.default && !schema.examples.includes(schema.default)\n                ? ([schema.default] as string[])\n                : []\n            )\n            .map((example: any) => {\n              return <option key={example} value={example} />;\n            })}\n        </datalist>\n      ) : null}\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  DescriptionFieldProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nexport default function DescriptionField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ id, description }: DescriptionFieldProps<T, S, F>) {\n  if (description) {\n    return (\n      <>\n        <div id={id} className=\"mb-3\">\n          {description}\n        </div>\n      </>\n    );\n  }\n\n  return null;\n}\n","import React from \"react\";\nimport {\n  errorId,\n  FieldErrorProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `FieldErrorTemplate` component renders the errors local to the particular field\n *\n * @param props - The `FieldErrorProps` for the errors being rendered\n */\nexport default function FieldErrorTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldErrorProps<T, S, F>) {\n  const { errors = [], idSchema } = props;\n  if (errors.length === 0) {\n    return null;\n  }\n  const id = errorId<T>(idSchema);\n\n  return (\n    <div>\n      <ul id={id} className=\"error-detail bs-callout bs-callout-info\">\n        {errors\n          .filter((elem) => !!elem)\n          .map((error, index: number) => {\n            return (\n              <li className=\"text-red-700 text-sm\" key={index}>\n                {error}\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport {\n  FieldTemplateProps,\n  FormContextType,\n  getTemplate,\n  getUiOptions,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nexport default function FieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  id,\n  children,\n  displayLabel,\n  rawErrors = [],\n  errors,\n  help,\n  rawDescription,\n  classNames,\n  style,\n  disabled,\n  label,\n  hidden,\n  onDropPropertyClick,\n  onKeyChange,\n  readonly,\n  required,\n  schema,\n  uiSchema,\n  registry,\n}: FieldTemplateProps<T, S, F>) {\n  const uiOptions = getUiOptions(uiSchema);\n  const WrapIfAdditionalTemplate = getTemplate<\n    \"WrapIfAdditionalTemplate\",\n    T,\n    S,\n    F\n  >(\"WrapIfAdditionalTemplate\", registry, uiOptions);\n  if (hidden) {\n    return <div className=\"hidden\">{children}</div>;\n  }\n  return (\n    <WrapIfAdditionalTemplate\n      classNames={classNames}\n      style={style}\n      disabled={disabled}\n      id={id}\n      label={label}\n      onDropPropertyClick={onDropPropertyClick}\n      onKeyChange={onKeyChange}\n      readonly={readonly}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    >\n      <>\n        {displayLabel && label !== \" \" && (\n          <label\n            htmlFor={id}\n            className={classnames(\"block mb-2 text-sm font-medium\", {\n              \"text-red-700\": rawErrors.length > 0,\n              \"text-slate-700\": rawErrors.length < 0\n            })}\n          >\n            {label}\n            {required ? \"*\" : null}\n          </label>\n        )}\n        {children}\n        {displayLabel && rawDescription && (\n          <p\n            className={rawErrors.length > 0 ? \"text-red-700\" : \"text-slate-500\"}\n          >\n            {rawDescription}\n          </p>\n        )}\n        {errors}\n        {help}\n      </>\n    </WrapIfAdditionalTemplate>\n  );\n}\n","import React from \"react\";\nimport {\n  FormContextType,\n  IconButtonProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nimport { ArrowSmallUpIcon, ArrowSmallDownIcon, XMarkIcon } from '@heroicons/react/20/solid';\n\nexport default function IconButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: IconButtonProps<T, S, F>) {\n  const { icon, iconType, className, uiSchema, registry, ...otherProps } =\n    props;\n  return (\n    <button {...otherProps} className=\"block rounded-[5px] border border-slate-200 p-0.5 mb-1 cursor-pointer\">\n      {icon === \"up\" ? <ArrowSmallUpIcon className={className} /> : null}\n      {icon === \"down\" ? <ArrowSmallDownIcon className={className} /> : null}\n      {icon === \"remove\" ? <XMarkIcon className={className} /> : null}\n    </button>\n  );\n}\n\nexport function MoveDownButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: IconButtonProps<T, S, F>) {\n  return (\n    <IconButton title=\"Move down\" {...props} icon=\"down\" />\n  );\n}\n\nexport function MoveUpButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: IconButtonProps<T, S, F>) {\n  return <IconButton title=\"Move up\" {...props} icon=\"up\" />;\n}\n\nexport function RemoveButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: IconButtonProps<T, S, F>) {\n  return (\n    <IconButton\n      title=\"Remove\"\n      {...props}\n      icon=\"remove\"\n    />\n  );\n}\n","import React from \"react\";\n\nimport {\n  canExpand,\n  descriptionId,\n  FormContextType,\n  getTemplate,\n  getUiOptions,\n  ObjectFieldTemplateProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n  titleId,\n} from \"@rjsf/utils\";\n\nexport default function ObjectFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  description,\n  title,\n  properties,\n  required,\n  uiSchema,\n  idSchema,\n  schema,\n  formData,\n  onAddClick,\n  disabled,\n  readonly,\n  registry,\n}: ObjectFieldTemplateProps<T, S, F>) {\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\n  const TitleFieldTemplate = getTemplate<\"TitleFieldTemplate\", T, S, F>(\n    \"TitleFieldTemplate\",\n    registry,\n    uiOptions\n  );\n  const DescriptionFieldTemplate = getTemplate<\n    \"DescriptionFieldTemplate\",\n    T,\n    S,\n    F\n  >(\"DescriptionFieldTemplate\", registry, uiOptions);\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <>\n      {(uiOptions.title || title) && (\n        <TitleFieldTemplate\n          id={titleId<T>(idSchema)}\n          title={uiOptions.title || title}\n          required={required}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      {(uiOptions.description || description) && (\n        <DescriptionFieldTemplate\n          id={descriptionId<T>(idSchema)}\n          description={uiOptions.description || description!}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      <div className=\"p-0\">\n        {properties.map((element: any, index: number) => (\n          <div\n            key={index}\n            className={element.hidden ? \"d-none\" : \"mb-5\"}\n          >\n            {element.content}\n          </div>\n        ))}\n        {canExpand(schema, uiSchema, formData) ? (\n          <div className=\"py-4\">\n            <AddButton\n              onClick={onAddClick(schema)}\n              disabled={disabled || readonly}\n              className=\"object-property-expand\"\n              uiSchema={uiSchema}\n              registry={registry}\n            />\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  FormContextType,\n  getSubmitButtonOptions,\n  RJSFSchema,\n  StrictRJSFSchema,\n  SubmitButtonProps,\n} from \"@rjsf/utils\";\n\nexport default function SubmitButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: SubmitButtonProps<T, S, F>) {\n  const {\n    submitText,\n    norender,\n    props: submitButtonProps,\n  } = getSubmitButtonOptions<T, S, F>(props.uiSchema);\n  if (norender) {\n    return null;\n  }\n  return (\n    <div>\n      <button type=\"submit\" {...submitButtonProps}>\n        {submitText}\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  FormContextType,\n  getUiOptions,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TitleFieldProps,\n} from \"@rjsf/utils\";\n\nexport default function TitleField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ id, title, uiSchema }: TitleFieldProps<T, S, F>) {\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\n  return (\n    <div id={id} className=\"mb-4\">\n      <h5 className=\"block mb-2 text-sm font-medium\">{uiOptions.title || title}</h5>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport {\n  ADDITIONAL_PROPERTY_FLAG,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WrapIfAdditionalTemplateProps,\n} from \"@rjsf/utils\";\n\nexport default function WrapIfAdditionalTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  classNames,\n  style,\n  children,\n  disabled,\n  id,\n  label,\n  onDropPropertyClick,\n  onKeyChange,\n  readonly,\n  required,\n  schema,\n  uiSchema,\n  registry,\n}: WrapIfAdditionalTemplateProps<T, S, F>) {\n  // Button templates are not overridden in the uiSchema\n  const { RemoveButton } = registry.templates.ButtonTemplates;\n  const keyLabel = `${label} Key`; // i18n ?\n  const additional = ADDITIONAL_PROPERTY_FLAG in schema;\n\n  if (!additional) {\n    return (\n      <div className={classNames} style={style}>\n        {children}\n      </div>\n    );\n  }\n\n  return (\n    <div className={classNames} style={style}>\n      <div className=\"row\">\n        <div className=\"col-xs-5 form-additional\">\n          <div className=\"form-group\">\n            <label htmlFor={`${id}-key`}>{keyLabel}</label>\n            <input\n              className=\"form-control\"\n              required={required}\n              type=\"text\"\n              id={`${id}-key`}\n              onBlur={(event) => onKeyChange(event.target.value)}\n              defaultValue={label}\n            />\n          </div>\n        </div>\n        <div className=\"form-additional form-group col-xs-5\">{children}</div>\n        <div className=\"col-xs-2\">\n          <RemoveButton\n            className=\"array-item-remove btn-block\"\n            style={{ border: \"0\" }}\n            disabled={disabled || readonly}\n            onClick={onDropPropertyClick(label)}\n            uiSchema={uiSchema}\n            registry={registry}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import AddButton from \"../AddButton\";\nimport ArrayFieldTemplate from \"../ArrayFieldTemplate\";\nimport ArrayFieldItemTemplate from \"../ArrayFieldItemTemplate\";\nimport BaseInputTemplate from \"../BaseInputTemplate/BaseInputTemplate\";\nimport DescriptionField from \"../DescriptionField\";\nimport FieldErrorTemplate from \"../FieldErrorTemplate\";\nimport FieldTemplate from \"../FieldTemplate\";\nimport { MoveDownButton, MoveUpButton, RemoveButton } from \"../IconButton\";\nimport ObjectFieldTemplate from \"../ObjectFieldTemplate\";\nimport SubmitButton from \"../SubmitButton\";\nimport TitleField from \"../TitleField\";\nimport WrapIfAdditionalTemplate from \"../WrapIfAdditionalTemplate\";\n\nimport {\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TemplatesType,\n} from \"@rjsf/utils\";\n\nexport function generateTemplates<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): Partial<TemplatesType<T, S, F>> {\n  return {\n    ArrayFieldTemplate,\n    ArrayFieldItemTemplate,\n    BaseInputTemplate,\n    ButtonTemplates: {\n      AddButton,\n      MoveDownButton,\n      MoveUpButton,\n      RemoveButton,\n      SubmitButton\n    },\n    DescriptionFieldTemplate: DescriptionField,\n    FieldErrorTemplate,\n    FieldTemplate,\n    ObjectFieldTemplate,\n    TitleFieldTemplate: TitleField,\n    WrapIfAdditionalTemplate\n  };\n}\n\nexport default generateTemplates();\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport {\n  ariaDescribedByIds,\n  FormContextType,\n  enumOptionsIndexForValue,\n  enumOptionsValueForIndex,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\nexport default function SelectWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  schema,\n  id,\n  options,\n  required,\n  disabled,\n  readonly,\n  value,\n  multiple,\n  autofocus,\n  onChange,\n  onBlur,\n  onFocus,\n  placeholder,\n  rawErrors = [],\n}: WidgetProps<T, S, F>) {\n  const { enumOptions, enumDisabled, emptyValue: optEmptyValue } = options;\n\n  const emptyValue = multiple ? [] : \"\";\n\n  function getValue(\n    event: React.FocusEvent | React.ChangeEvent | any,\n    multiple?: boolean\n  ) {\n    if (multiple) {\n      return [].slice\n        .call(event.target.options as any)\n        .filter((o: any) => o.selected)\n        .map((o: any) => o.value);\n    } else {\n      return event.target.value;\n    }\n  }\n  const selectedIndexes = enumOptionsIndexForValue<S>(\n    value,\n    enumOptions,\n    multiple\n  );\n\n  return (\n    <select\n      id={id}\n      name={id}\n      value={\n        typeof selectedIndexes === \"undefined\" ? emptyValue : selectedIndexes\n      }\n      required={required}\n      multiple={multiple}\n      disabled={disabled || readonly}\n      autoFocus={autofocus}\n      className={classnames(\"mt-1 block w-full rounded-md border-slate-300 shadow-sm focus:border-indigo-600 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\", {\n          \"is-invalid\": rawErrors.length > 0\n        })}\n      onBlur={\n        onBlur &&\n        ((event: React.FocusEvent) => {\n          const newValue = getValue(event, multiple);\n          onBlur(\n            id,\n            enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyValue)\n          );\n        })\n      }\n      onFocus={\n        onFocus &&\n        ((event: React.FocusEvent) => {\n          const newValue = getValue(event, multiple);\n          onFocus(\n            id,\n            enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyValue)\n          );\n        })\n      }\n      onChange={(event: React.ChangeEvent) => {\n        const newValue = getValue(event, multiple);\n        onChange(\n          enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyValue)\n        );\n      }}\n      aria-describedby={ariaDescribedByIds<T>(id)}\n    >\n      {!multiple && schema.default === undefined && (\n        <option value=\"\">{placeholder}</option>\n      )}\n      {(enumOptions as any).map(({ value, label }: any, i: number) => {\n        const disabled: any =\n          Array.isArray(enumDisabled) &&\n          (enumDisabled as any).indexOf(value) != -1;\n        return (\n          <option key={i} id={label} value={String(i)} disabled={disabled}>\n            {label}\n          </option>\n        );\n      })}\n    </select>\n  );\n}\n","import React from \"react\";\nimport {\n  ariaDescribedByIds,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\ntype CustomWidgetProps<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> = WidgetProps<T, S, F> & {\n  options: any;\n};\n\nexport default function TextareaWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  id,\n  placeholder,\n  value,\n  required,\n  disabled,\n  autofocus,\n  readonly,\n  onBlur,\n  onFocus,\n  onChange,\n  options,\n}: CustomWidgetProps<T, S, F>) {\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLTextAreaElement>) =>\n    onChange(value === \"\" ? options.emptyValue : value);\n  const _onBlur = ({\n    target: { value },\n  }: React.FocusEvent<HTMLTextAreaElement>) => onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLTextAreaElement>) => onFocus(id, value);\n\n  return (\n    <textarea\n      id={id}\n      name={id}\n      placeholder={placeholder}\n      disabled={disabled}\n      readOnly={readonly}\n      value={value}\n      required={required}\n      autoFocus={autofocus}\n      className=\"mt-1 block w-full rounded-md border-slate-300 shadow-sm focus:border-indigo-600 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n      rows={options.rows || 5}\n      onChange={_onChange}\n      onBlur={_onBlur}\n      onFocus={_onFocus}\n      aria-describedby={ariaDescribedByIds<T>(id)}\n    />\n  );\n}\n","import SelectWidget from \"../SelectWidget/SelectWidget\";\nimport TextareaWidget from \"../TextareaWidget/TextareaWidget\";\n\nimport {\n  FormContextType,\n  RegistryWidgetsType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nexport function generateWidgets<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): RegistryWidgetsType<T, S, F> {\n  return {\n    SelectWidget,\n    TextareaWidget\n  };\n}\n\nexport default generateWidgets();\n","import { ThemeProps } from \"@rjsf/core\";\n\nimport { generateTemplates } from \"../Templates\";\nimport { generateWidgets } from \"../Widgets\";\nimport { FormContextType, RJSFSchema, StrictRJSFSchema } from \"@rjsf/utils\";\n\nexport function generateTheme<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): ThemeProps<T, S, F> {\n  return {\n    templates: generateTemplates<T, S, F>(),\n    widgets: generateWidgets<T, S, F>(),\n  };\n}\n\nexport default generateTheme();\n","import { ComponentType } from \"react\";\n\nimport { withTheme, FormProps } from \"@rjsf/core\";\nimport { generateTheme } from \"../Theme\";\nimport { FormContextType, RJSFSchema, StrictRJSFSchema } from \"@rjsf/utils\";\n\nexport function generateForm<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): ComponentType<FormProps<T, S, F>> {\n  return withTheme<T, S, F>(generateTheme<T, S, F>());\n}\n\nexport default generateForm();\n"],"names":["AddButton","_ref","uiSchema","props","_objectWithoutPropertiesLoose","_excluded","React","createElement","className","title","PlusIcon","ArrayFieldTemplate","canAdd","disabled","idSchema","items","onAddClick","readonly","registry","required","schema","uiOptions","getUiOptions","ArrayFieldDescriptionTemplate","getTemplate","ArrayFieldItemTemplate","ArrayFieldTitleTemplate","templates","ButtonTemplates","id","$id","description","map","key","itemProps","_extends","onClick","children","hasToolbar","hasMoveDown","hasMoveUp","hasRemove","index","onDropIndexClick","onReorderClick","_registry$templates$B","MoveDownButton","MoveUpButton","RemoveButton","useState","isOpen","_useState","setIsOpen","classnames","formData","ChevronRightIcon","hidden","block","BaseInputTemplate","placeholder","value","onChange","onBlur","onFocus","autofocus","options","_ref$rawErrors","rawErrors","inputProps","extraProps","getInputProps","type","Fragment","name","autoFocus","readOnly","length","list","examples","examplesId","undefined","_ref2","target","emptyValue","_ref3","_ref4","ariaDescribedByIds","Array","isArray","concat","includes","example","DescriptionField","FieldErrorTemplate","errors","_props$errors","errorId","filter","elem","error","FieldTemplate","displayLabel","help","rawDescription","classNames","style","label","onDropPropertyClick","onKeyChange","WrapIfAdditionalTemplate","htmlFor","IconButton","icon","otherProps","ArrowSmallUpIcon","ArrowSmallDownIcon","XMarkIcon","ObjectFieldTemplate","properties","TitleFieldTemplate","DescriptionFieldTemplate","titleId","descriptionId","element","content","canExpand","SubmitButton","_getSubmitButtonOptio","getSubmitButtonOptions","submitText","norender","TitleField","ADDITIONAL_PROPERTY_FLAG","event","defaultValue","border","generateTemplates","Templates","SelectWidget","multiple","enumOptions","enumDisabled","optEmptyValue","getValue","slice","call","o","selected","selectedIndexes","enumOptionsIndexForValue","newValue","enumOptionsValueForIndex","i","indexOf","String","TextareaWidget","rows","generateWidgets","Widgets","generateTheme","widgets","Theme","generateForm","withTheme","Form"],"mappings":"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"}
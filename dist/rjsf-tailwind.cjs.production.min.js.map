{"version":3,"file":"rjsf-tailwind.cjs.production.min.js","sources":["../src/BaseInputTemplate/BaseInputTemplate.tsx","../src/Templates/Templates.ts","../src/Widgets/Widgets.ts","../src/Theme/Theme.tsx","../src/Form/Form.tsx"],"sourcesContent":["import React from \"react\";\n\nimport {\n  ariaDescribedByIds,\n  examplesId,\n  FormContextType,\n  getInputProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\nexport default function BaseInputTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  id,\n  placeholder,\n  required,\n  readonly,\n  disabled,\n  type,\n  value,\n  onChange,\n  onBlur,\n  onFocus,\n  autofocus,\n  options,\n  schema,\n  rawErrors = [],\n  children,\n  extraProps,\n}: WidgetProps<T, S, F>) {\n  const inputProps = {\n    ...extraProps,\n    ...getInputProps<T, S, F>(schema, type, options),\n  };\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) =>\n    onChange(value === \"\" ? options.emptyValue : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  // const classNames = [rawErrors.length > 0 ? \"is-invalid\" : \"\", type === 'file' ? 'custom-file-label': \"\"]\n  return (\n    <>\n      <form\n        id={id}\n        name={id}\n        placeholder={placeholder}\n        autoFocus={autofocus}\n        required={required}\n        disabled={disabled}\n        readOnly={readonly}\n        className={rawErrors.length > 0 ? \"is-invalid\" : \"tailwind-form\"}\n        list={schema.examples ? examplesId<T>(id) : undefined}\n        {...inputProps}\n        value={value || value === 0 ? value : \"\"}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        aria-describedby={ariaDescribedByIds<T>(id, !!schema.examples)}\n      />\n      {children}\n      {Array.isArray(schema.examples) ? (\n        <datalist id={examplesId<T>(id)}>\n          {(schema.examples as string[])\n            .concat(\n              schema.default && !schema.examples.includes(schema.default)\n                ? ([schema.default] as string[])\n                : []\n            )\n            .map((example: any) => {\n              return <option key={example} value={example} />;\n            })}\n        </datalist>\n      ) : null}\n    </>\n  );\n}\n","import BaseInputTemplate from \"../BaseInputTemplate/BaseInputTemplate\";\n\nimport {\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TemplatesType,\n} from \"@rjsf/utils\";\n\nexport function generateTemplates<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): Partial<TemplatesType<T, S, F>> {\n  return {\n    BaseInputTemplate\n  };\n}\n\nexport default generateTemplates();\n","import {\n  FormContextType,\n  RegistryWidgetsType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nexport function generateWidgets<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): RegistryWidgetsType<T, S, F> {\n  return {};\n}\n\nexport default generateWidgets();\n","import { ThemeProps } from \"@rjsf/core\";\n\nimport { generateTemplates } from \"../Templates\";\nimport { generateWidgets } from \"../Widgets\";\nimport { FormContextType, RJSFSchema, StrictRJSFSchema } from \"@rjsf/utils\";\n\nexport function generateTheme<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): ThemeProps<T, S, F> {\n  return {\n    templates: generateTemplates<T, S, F>(),\n    widgets: generateWidgets<T, S, F>(),\n  };\n}\n\nexport default generateTheme();\n","import { ComponentType } from \"react\";\n\nimport { withTheme, FormProps } from \"@rjsf/core\";\nimport { generateTheme } from \"../Theme\";\nimport { FormContextType, RJSFSchema, StrictRJSFSchema } from \"@rjsf/utils\";\n\nexport function generateForm<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): ComponentType<FormProps<T, S, F>> {\n  return withTheme<T, S, F>(generateTheme<T, S, F>());\n}\n\nexport default generateForm();\n"],"names":["BaseInputTemplate","_ref","id","placeholder","required","readonly","disabled","value","onChange","onBlur","onFocus","autofocus","options","schema","_ref$rawErrors","rawErrors","children","inputProps","_extends","extraProps","getInputProps","type","React","createElement","Fragment","name","autoFocus","readOnly","className","length","list","examples","examplesId","undefined","_ref2","target","emptyValue","_ref3","_ref4","ariaDescribedByIds","Array","isArray","concat","includes","map","example","key","generateTemplates","Templates","generateWidgets","Widgets","generateTheme","templates","widgets","Theme","generateForm","withTheme","Form"],"mappings":"mcAYc,SAAUA,EAqBDC,GAAA,IAhBrBC,IAAAA,GACAC,IAAAA,YACAC,IAAAA,SACAC,IAAAA,SACAC,IAAAA,SAEAC,IAAAA,MACAC,IAAAA,SACAC,IAAAA,OACAC,IAAAA,QACAC,IAAAA,UACAC,IAAAA,QACAC,IAAAA,OAAMC,EAAAb,EACNc,UAAAA,aAAY,GAAED,EACdE,IAAAA,SAGMC,EAAUC,EAAA,CAAA,IAFhBC,WAIKC,EAAaA,cAAUP,IAd5BQ,KAc0CT,IAa1C,OACEU,EAAA,QAAAC,cAAAD,EAAAA,QAAAE,SAAA,KACEF,UACEC,cAAA,OAAAL,EAAA,CAAAhB,GAAIA,EACJuB,KAAMvB,EACNC,YAAaA,EACbuB,UAAWf,EACXP,SAAUA,EACVE,SAAUA,EACVqB,SAAUtB,EACVuB,UAAWb,EAAUc,OAAS,EAAI,aAAe,gBACjDC,KAAMjB,EAAOkB,SAAWC,EAAAA,WAAc9B,QAAM+B,GACxChB,EAAU,CACdV,MAAOA,GAAmB,IAAVA,EAAcA,EAAQ,GACtCC,SAzBY,SAAH0B,GAAA,IACH3B,EAAK2B,EAAfC,OAAU5B,MAAK,OAEfC,EAAmB,KAAVD,EAAeK,EAAQwB,WAAa7B,EAAM,EAuB/CE,OAtBU,SAAH4B,GAAqB,OAChC5B,EAAOP,EADyBmC,EAAfF,OAAU5B,MACV,EAsBbG,QArBW,SAAH4B,GACG,OACyB5B,EAAQR,EADjCoC,EAAfH,OAAU5B,MACgD,EAoBpC,mBAAAgC,EAAAA,mBAAsBrC,IAAMW,EAAOkB,aAEtDf,EACAwB,MAAMC,QAAQ5B,EAAOkB,UACpBT,EAAAA,QAAUC,cAAA,WAAA,CAAArB,GAAI8B,EAAUA,WAAI9B,IACxBW,EAAOkB,SACNW,OACC7B,EAAM,UAAaA,EAAOkB,SAASY,SAAS9B,EAAc,SACrD,CAACA,EAAc,SAChB,IAEL+B,KAAI,SAACC,GACJ,OAAOvB,EAAA,QAAAC,cAAA,SAAA,CAAQuB,IAAKD,EAAStC,MAAOsC,GACtC,KAEF,KAGV,UC3EgBE,IAKd,MAAO,CACL/C,kBAAAA,EAEJ,CAEA,IAAAgD,EAAeD,aCZCE,IAKd,MAAO,EACT,CAEA,IAAAC,EAAeD,aCTCE,IAKd,MAAO,CACLC,UAAWL,IACXM,QDDK,GCGT,CAEA,IAAAC,EAAeH,aCXCI,IAKd,OAAOC,EAASA,UAAUL,IAC5B,CAEA,IAAAM,EAAeF"}
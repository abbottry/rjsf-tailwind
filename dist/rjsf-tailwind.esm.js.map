{"version":3,"file":"rjsf-tailwind.esm.js","sources":["../src/BaseInputTemplate/BaseInputTemplate.tsx","../src/Templates/Templates.ts","../src/Widgets/Widgets.ts","../src/Theme/Theme.tsx","../src/Form/Form.tsx"],"sourcesContent":["import React from \"react\";\n\nimport {\n  ariaDescribedByIds,\n  examplesId,\n  FormContextType,\n  getInputProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\nexport default function BaseInputTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  id,\n  placeholder,\n  required,\n  readonly,\n  disabled,\n  type,\n  value,\n  onChange,\n  onBlur,\n  onFocus,\n  autofocus,\n  options,\n  schema,\n  rawErrors = [],\n  children,\n  extraProps,\n}: WidgetProps<T, S, F>) {\n  const inputProps = {\n    ...extraProps,\n    ...getInputProps<T, S, F>(schema, type, options),\n  };\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) =>\n    onChange(value === \"\" ? options.emptyValue : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  // const classNames = [rawErrors.length > 0 ? \"is-invalid\" : \"\", type === 'file' ? 'custom-file-label': \"\"]\n  return (\n    <>\n      <form\n        id={id}\n        name={id}\n        placeholder={placeholder}\n        autoFocus={autofocus}\n        required={required}\n        disabled={disabled}\n        readOnly={readonly}\n        className={rawErrors.length > 0 ? \"is-invalid\" : \"tailwind-form\"}\n        list={schema.examples ? examplesId<T>(id) : undefined}\n        {...inputProps}\n        value={value || value === 0 ? value : \"\"}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        aria-describedby={ariaDescribedByIds<T>(id, !!schema.examples)}\n      />\n      {children}\n      {Array.isArray(schema.examples) ? (\n        <datalist id={examplesId<T>(id)}>\n          {(schema.examples as string[])\n            .concat(\n              schema.default && !schema.examples.includes(schema.default)\n                ? ([schema.default] as string[])\n                : []\n            )\n            .map((example: any) => {\n              return <option key={example} value={example} />;\n            })}\n        </datalist>\n      ) : null}\n    </>\n  );\n}\n","import BaseInputTemplate from \"../BaseInputTemplate/BaseInputTemplate\";\n\nimport {\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TemplatesType,\n} from \"@rjsf/utils\";\n\nexport function generateTemplates<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): Partial<TemplatesType<T, S, F>> {\n  return {\n    BaseInputTemplate\n  };\n}\n\nexport default generateTemplates();\n","import {\n  FormContextType,\n  RegistryWidgetsType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nexport function generateWidgets<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): RegistryWidgetsType<T, S, F> {\n  return {};\n}\n\nexport default generateWidgets();\n","import { ThemeProps } from \"@rjsf/core\";\n\nimport { generateTemplates } from \"../Templates\";\nimport { generateWidgets } from \"../Widgets\";\nimport { FormContextType, RJSFSchema, StrictRJSFSchema } from \"@rjsf/utils\";\n\nexport function generateTheme<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): ThemeProps<T, S, F> {\n  return {\n    templates: generateTemplates<T, S, F>(),\n    widgets: generateWidgets<T, S, F>(),\n  };\n}\n\nexport default generateTheme();\n","import { ComponentType } from \"react\";\n\nimport { withTheme, FormProps } from \"@rjsf/core\";\nimport { generateTheme } from \"../Theme\";\nimport { FormContextType, RJSFSchema, StrictRJSFSchema } from \"@rjsf/utils\";\n\nexport function generateForm<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): ComponentType<FormProps<T, S, F>> {\n  return withTheme<T, S, F>(generateTheme<T, S, F>());\n}\n\nexport default generateForm();\n"],"names":["BaseInputTemplate","id","placeholder","required","readonly","disabled","type","value","onChange","onBlur","onFocus","autofocus","options","schema","rawErrors","children","extraProps","inputProps","getInputProps","_onChange","target","emptyValue","_onBlur","_onFocus","React","createElement","Fragment","name","autoFocus","readOnly","className","length","list","examples","examplesId","undefined","ariaDescribedByIds","Array","isArray","concat","includes","map","example","key","generateTemplates","generateWidgets","generateTheme","templates","widgets","generateForm","withTheme"],"mappings":"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"}